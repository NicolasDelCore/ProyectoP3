// <auto-generated />
using System;
using LogicaAccesoDatos.RepositorioEF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcosistemasMarinos.LogicaAccesoDatos.Migrations
{
    [DbContext(typeof(EcosistemasMarinosContext))]
    [Migration("20231016175036_eliminadoIds")]
    partial class eliminadoIds
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EcosistemasMarinos.LogicaNegocio.Entidades.Amenaza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EcosistemaId")
                        .HasColumnType("int");

                    b.Property<int?>("EspecieId")
                        .HasColumnType("int");

                    b.Property<int>("Grado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EcosistemaId");

                    b.HasIndex("EspecieId");

                    b.ToTable("Amenazas");
                });

            modelBuilder.Entity("EcosistemasMarinos.LogicaNegocio.Entidades.Ecosistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoConservacionId")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoConservacionId");

                    b.HasIndex("PaisId");

                    b.ToTable("Ecosistemas");
                });

            modelBuilder.Entity("EcosistemasMarinos.LogicaNegocio.Entidades.Especie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoConservacionId")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCientifico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreVulgar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoConservacionId");

                    b.ToTable("Especies");
                });

            modelBuilder.Entity("EcosistemasMarinos.LogicaNegocio.Entidades.EstadoConservacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoPorcentual")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadosConservacion");
                });

            modelBuilder.Entity("EcosistemasMarinos.LogicaNegocio.Entidades.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alfa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("EcosistemasMarinos.LogicaNegocio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("EcosistemasMarinos.LogicaNegocio.Parametros.Parametro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parametros");
                });

            modelBuilder.Entity("EspeciesQueHabitan", b =>
                {
                    b.Property<int?>("EcosistemasQueHabitanId")
                        .HasColumnType("int");

                    b.Property<int?>("EspeciesQueHabitanId")
                        .HasColumnType("int");

                    b.HasKey("EcosistemasQueHabitanId", "EspeciesQueHabitanId");

                    b.HasIndex("EspeciesQueHabitanId");

                    b.ToTable("EspeciesQueHabitan");
                });

            modelBuilder.Entity("EspeciesQuePuedenHabitar", b =>
                {
                    b.Property<int?>("EcosistemasQuePuedenHabitarId")
                        .HasColumnType("int");

                    b.Property<int?>("EspeciesQuePuedenHabitarId")
                        .HasColumnType("int");

                    b.HasKey("EcosistemasQuePuedenHabitarId", "EspeciesQuePuedenHabitarId");

                    b.HasIndex("EspeciesQuePuedenHabitarId");

                    b.ToTable("EspeciesQuePuedenHabitar");
                });

            modelBuilder.Entity("EcosistemasMarinos.LogicaNegocio.Entidades.Amenaza", b =>
                {
                    b.HasOne("EcosistemasMarinos.LogicaNegocio.Entidades.Ecosistema", null)
                        .WithMany("Amenazas")
                        .HasForeignKey("EcosistemaId");

                    b.HasOne("EcosistemasMarinos.LogicaNegocio.Entidades.Especie", null)
                        .WithMany("Amenazas")
                        .HasForeignKey("EspecieId");
                });

            modelBuilder.Entity("EcosistemasMarinos.LogicaNegocio.Entidades.Ecosistema", b =>
                {
                    b.HasOne("EcosistemasMarinos.LogicaNegocio.Entidades.EstadoConservacion", "EstadoConservacion")
                        .WithMany()
                        .HasForeignKey("EstadoConservacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcosistemasMarinos.LogicaNegocio.Entidades.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("EcosistemasMarinos.LogicaNegocio.ValueObjects.Ubicacion", "Ubicacion", b1 =>
                        {
                            b1.Property<int>("EcosistemaId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Latitud")
                                .HasColumnType("decimal(18, 2)");

                            b1.Property<decimal>("Longitud")
                                .HasColumnType("decimal(18, 2)");

                            b1.HasKey("EcosistemaId");

                            b1.ToTable("Ecosistemas");

                            b1.WithOwner()
                                .HasForeignKey("EcosistemaId");
                        });

                    b.Navigation("EstadoConservacion");

                    b.Navigation("Pais");

                    b.Navigation("Ubicacion")
                        .IsRequired();
                });

            modelBuilder.Entity("EcosistemasMarinos.LogicaNegocio.Entidades.Especie", b =>
                {
                    b.HasOne("EcosistemasMarinos.LogicaNegocio.Entidades.EstadoConservacion", "EstadoConservacion")
                        .WithMany()
                        .HasForeignKey("EstadoConservacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("EcosistemasMarinos.LogicaNegocio.ValueObjects.RangoTamano", "RangoTamano", b1 =>
                        {
                            b1.Property<int>("EspecieId")
                                .HasColumnType("int");

                            b1.Property<decimal>("LongitudMaxima")
                                .HasColumnType("decimal(18, 2)");

                            b1.Property<decimal>("LongitudMinima")
                                .HasColumnType("decimal(18, 2)");

                            b1.Property<decimal>("PesoMaximo")
                                .HasColumnType("decimal(18, 2)");

                            b1.Property<decimal>("PesoMinimo")
                                .HasColumnType("decimal(18, 2)");

                            b1.HasKey("EspecieId");

                            b1.ToTable("Especies");

                            b1.WithOwner()
                                .HasForeignKey("EspecieId");
                        });

                    b.Navigation("EstadoConservacion");

                    b.Navigation("RangoTamano")
                        .IsRequired();
                });

            modelBuilder.Entity("EspeciesQueHabitan", b =>
                {
                    b.HasOne("EcosistemasMarinos.LogicaNegocio.Entidades.Ecosistema", null)
                        .WithMany()
                        .HasForeignKey("EcosistemasQueHabitanId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("EcosistemasMarinos.LogicaNegocio.Entidades.Especie", null)
                        .WithMany()
                        .HasForeignKey("EspeciesQueHabitanId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("EspeciesQuePuedenHabitar", b =>
                {
                    b.HasOne("EcosistemasMarinos.LogicaNegocio.Entidades.Ecosistema", null)
                        .WithMany()
                        .HasForeignKey("EcosistemasQuePuedenHabitarId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("EcosistemasMarinos.LogicaNegocio.Entidades.Especie", null)
                        .WithMany()
                        .HasForeignKey("EspeciesQuePuedenHabitarId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("EcosistemasMarinos.LogicaNegocio.Entidades.Ecosistema", b =>
                {
                    b.Navigation("Amenazas");
                });

            modelBuilder.Entity("EcosistemasMarinos.LogicaNegocio.Entidades.Especie", b =>
                {
                    b.Navigation("Amenazas");
                });
#pragma warning restore 612, 618
        }
    }
}
